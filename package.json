{
    "name": "codebridge",
    "displayName": "CodeBridge - AI Code Context",
    "description": "Seamlessly copy project context to any AI chat. Generate files from AI responses. The essential bridge for your AI-driven workflow.",
    "version": "1.1.0",
    "publisher": "fetchFromServer",
    "icon": "images/icon.png",
    "repository": {
        "type": "git",
        "url": "https://github.com/fetchFromServer/codebridge.git"
    },
    "bugs": {
        "url": "https://github.com/fetchFromServer/codebridge/issues"
    },
    "homepage": "https://github.com/fetchFromServer/codebridge#readme",
    "keywords": [
        "chatgpt",
        "claude",
        "gemini",
        "copilot",
        "ai chat",
        "copy code",
        "paste code",
        "ai helper",
        "perplexity",
        "copy to ai",
        "paste from ai",
        "copy multiple files",
        "copy folder",
        "generate files",
        "ai code",
        "llm",
        "ai assistant",
        "code to clipboard",
        "markdown code",
        "batch copy",
        "workspace copy",
        "code export",
        "ai workflow",
        "code generator",
        "file generator",
        "copy project",
        "ai integration",
        "code bridge",
        "quick copy"
    ],
    "galleryBanner": {
        "color": "#1e1e1e",
        "theme": "dark"
    },
    "engines": {
        "vscode": "^1.90.0"
    },
    "categories": [
        "Other",
        "Programming Languages"
    ],
    "activationEvents": [
        "onCommand:extension.copyAllContents",
        "onCommand:extension.copyWithPrompt",
        "onCommand:extension.generateFromClipboard"
    ],
    "extensionKind": [
        "workspace"
    ],
    "capabilities": {
        "virtualWorkspaces": true
    },
    "main": "./out/extension.js",
    "contributes": {
        "commands": [
            {
                "command": "extension.copyAllContents",
                "title": "Copy Files to Clipboard"
            },
            {
                "command": "extension.copyWithPrompt",
                "title": "Copy with AI Prompt",
                "icon": "$(beaker)"
            },
            {
                "command": "extension.generateFromClipboard",
                "title": "Create Files from AI Response"
            }
        ],
        "menus": {
            "explorer/context": [
                {
                    "command": "extension.copyAllContents",
                    "group": "1_codebridge@1"
                },
                {
                    "command": "extension.copyWithPrompt",
                    "group": "1_codebridge@2"
                },
                {
                    "command": "extension.generateFromClipboard",
                    "group": "1_codebridge@3"
                }
            ]
        },
        "keybindings": [
            {
                "command": "extension.copyWithPrompt",
                "key": "ctrl+shift+alt+c",
                "mac": "cmd+shift+alt+c"
            }
        ],
        "configuration": {
            "title": "CodeBridge",
            "properties": {
                "codeBridge.exclude": {
                    "type": "array",
                    "default": [
                        "**/node_modules",
                        "**/.git",
                        "**/.vscode",
                        "**/dist",
                        "**/build",
                        "**/coverage",
                        "**/*.log",
                        "**/*.lock",
                        "**/.DS_Store",
                        "**/thumbs.db"
                    ],
                    "description": "Glob patterns for files/folders to exclude from copy."
                },
                "codeBridge.ignoreBinaryFiles": {
                    "type": "boolean",
                    "default": true,
                    "description": "Skip binary files automatically when copying."
                },
                "codeBridge.maxFileSize": {
                    "type": "number",
                    "default": 1048576,
                    "description": "Maximum file size in bytes to copy (default: 1MB)."
                },
                "codeBridge.outputFormat": {
                    "type": "string",
                    "enum": [
                        "xml",
                        "markdown",
                        "plain"
                    ],
                    "default": "markdown",
                    "description": "Output format for the clipboard. Markdown is generally recommended."
                },
                "codeBridge.includeStats": {
                    "type": "boolean",
                    "default": true,
                    "description": "Include file/token statistics in the copied output."
                },
                "codeBridge.addPrompt": {
                    "type": "boolean",
                    "default": false,
                    "description": "Always add the default prompt to the output."
                },
                "codeBridge.defaultPrompt": {
                    "type": "string",
                    "default": "",
                    "description": "A custom prompt to automatically prepend to every copied output when 'addPrompt' is enabled. Left blank by default to avoid unwanted text."
                },
                "codeBridge.useDefaultPrompts": {
                    "type": "boolean",
                    "default": true,
                    "description": "Include the built-in prompt templates. Set to false to only use your own 'customPrompts'."
                },
                "codeBridge.customPrompts": {
                    "type": "object",
                    "default": {
                        "Set Conversation Context": "Establish the following content as the complete context for our conversation. Internalize this information, then wait for my specific instructions. Acknowledge with a brief confirmation.",
                        "Critical Review": "Perform a critical review of this code. Identify bugs, security vulnerabilities, and performance issues. For each finding, specify its severity (Critical/High/Medium/Low), the file/line, and a corrected code snippet.",
                        "Refactor": "Refactor this code for better readability, maintainability, and adherence to modern design patterns. Prioritize clarity and simplicity.",
                        "Generate Docs": "Generate comprehensive documentation for this code. Follow the standard format for the language (e.g., JSDoc, Python Docstrings) and include descriptions for classes, methods, parameters, and return values.",
                        "Explain Architecture": "Provide a high-level explanation of this code's architecture and logic. Describe the role of each major component and how they interact.",
                        "Analyze Performance": "Analyze this code for performance bottlenecks. Focus on inefficient algorithms, memory usage, and slow operations. Suggest concrete, practical optimizations with code examples."
                    },
                    "description": "Custom prompt templates for quick access. Defining any prompts here will replace the default list."
                },
                "codeBridge.tokenWarningLimit": {
                    "type": "number",
                    "default": 100000,
                    "description": "Warn when the estimated token count of the output exceeds this limit."
                },
                "codeBridge.generator.createDirectories": {
                    "type": "boolean",
                    "default": true,
                    "description": "Auto-create directories when generating files from clipboard."
                },
                "codeBridge.generator.overwriteExisting": {
                    "type": "boolean",
                    "default": false,
                    "description": "Overwrite existing files without asking during file generation."
                },
                "codeBridge.generator.defaultExtension": {
                    "type": "string",
                    "default": "txt",
                    "description": "Default file extension for generated files if language is not detected."
                },
                "codeBridge.generator.pathCommentPrefixes": {
                    "type": "array",
                    "default": [
                        "//",
                        "#",
                        "--",
                        "/*",
                        "*",
                        "<!--",
                        "%",
                        "'"
                    ],
                    "description": "Comment prefixes used to detect file paths in code blocks."
                },
                "codeBridge.generator.intelligentNaming": {
                    "type": "boolean",
                    "default": true,
                    "description": "Try to extract meaningful names from code (e.g., class names) when no file path is found."
                }
            }
        }
    },
    "scripts": {
        "vscode:prepublish": "npm run compile",
        "compile": "tsc -p ./",
        "watch": "tsc -watch -p ./"
    },
    "devDependencies": {
        "@types/vscode": "^1.90.0",
        "@types/node": "20.x",
        "typescript": "^5.8.3"
    }
}